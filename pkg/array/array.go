package array

// Returns the index of the first element that is true on the condition.
// Otherwise, returns -1.
func Find[T any](arr []T, cond func(T) bool) int {
	for i := 0; i < len(arr); i++ {
		if cond(arr[i]) {
			return i
		}
	}
	return -1
}

// Returns true if an element of the given array matches the condition.
func Some[T any](arr []T, cond func(T) bool) bool {
	index := Find(arr, cond)
	return index > -1
}

// Returns true if the array contains the given value.
func Contains[T comparable](arr []T, value T) bool {
	return Some(arr, func(elem T) bool {
		return elem == value
	})
}

// Returns an array generated by copying a transformation of the original
func Map[In, Out any](arr []In, transformFunc func(elem In) Out) []Out {
	result := []Out{}
	for i := 0; i < len(arr); i++ {
		result = append(result, transformFunc(arr[i]))
	}
	return result
}
